apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.chan.vuong.chanpro"
        manifestPlaceholders = [onesignal_app_id: "0c005ee7-ebed-4409-8ab6-605b877cf4c4", onesignal_google_project_number: "1075420801136"]
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 121
        versionName "1.2.1"
        multiDexEnabled = true
    }

    dexOptions {
        preDexLibraries = false
    }

    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v4'
        all*.exclude group: 'com.android.support', module: 'support-compat'
        all*.exclude group: 'com.android.support', module: 'support-annotations'
        all*.exclude group: 'com.android.support', module: 'support-vector-drawable'
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
        jni.srcDirs = []
    }

    signingConfigs {

       release {
           storeFile file("D:/Projects/Cocos2dx/ChanBachThu/chanvuong.keystore")
           storePassword "411762"
           keyAlias "chanvuong"
           keyPassword "411762"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }
    sourceSets { main { aidl.srcDirs = ['src/main/aidl', 'src/main/aidl/', 'src/aidl/'] } }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':libcocos2dx')
    compile 'com.facebook.android:facebook-android-sdk:4.18.0'
    compile 'com.onesignal:OneSignal:3.+@aar'
    compile 'com.google.android.gms:play-services-gcm:+'
    compile 'com.google.android.gms:play-services-location:+'
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../Resources'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets
